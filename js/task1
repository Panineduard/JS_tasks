let DATA_URL = "https://jsonplaceholder.typicode.com";

function Provider(id, callback) {
    this.id = id;
    this.todoItem = initTodoItem(id, callback);
}

function initTodoItem(id, callback) {
    if (!id || !callback || !callback instanceof Function) {
        return;
    }
    let item = cacheService.getItemFromCache(id);
    if (item) {
        callback(item);
        return;
    }

    dataService.getItemById(id, callback).then(
        result => {
            callback(result.title);
            cacheService.setItemToCache(id, result.title);
        },
        error => {
            console.log("Something went wrong.");
        }
    );
}

let cacheService = {
    getItemFromCache: (id) => {
        let cachedValue = localStorage.getItem(id);
        return cachedValue ? JSON.parse(cachedValue) : null;
    },
    setItemToCache: function (id, body) {
        if (!id || !body) {
            return;
        }

        localStorage.setItem(id, JSON.stringify(body));
    }
};

let dataService = {
    getItemById: function (id) {
        return new Promise(function (resolve, reject) {
            fetch(DATA_URL + "/todos/" + id)
                .then(response => response.json())
                .then(json => resolve(json));
        });
    }
};

function runLogic() {
    let itemIdInput = document.getElementById("itemId");
    if (itemIdInput && itemIdInput.value && Number.isInteger(+itemIdInput.value)) {
        new Provider(itemIdInput.value, console.log);
    } else {
        console.log("wrong input");
    }
}